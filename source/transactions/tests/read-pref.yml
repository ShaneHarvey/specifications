# This test doesn't check contents of command-started events.
database_name: &database_name "transaction-tests"
collection_name: &collection_name "test"

data: []

tests:
  - description: default readPreference

    operations:
      - name: startTransaction
        arguments:
          session: session0
      - name: insertMany
        arguments:
          documents: &insertedDocs
            - _id: 1
            - _id: 2
            - _id: 3
            - _id: 4
          session: session0
        result:
          insertedIds: {0: 1, 1: 2, 2: 3, 3: 4}
      - name: count
        collectionOptions:
          # The driver overrides the collection's read pref with the
          # transaction's so count runs with Primary and succeeds.
          readPreference:
            mode: Secondary
        arguments:
          filter:
            _id: 1
          session: session0
        result: 1
      - name: find
        collectionOptions:
          readPreference:
            mode: Secondary
        arguments:
          batchSize: 3
          session: session0
        result: *insertedDocs
      - name: aggregate
        collectionOptions:
          readPreference:
            mode: Secondary
        arguments:
          pipeline:
            - $project:
                _id: 1
          batchSize: 3
          session: session0
        result: *insertedDocs
      - name: commitTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data: *insertedDocs

  - description: primary readPreference

    operations:
      - name: startTransaction
        arguments:
          session: session0
          options:
            readPreference:
              mode: Primary
      - name: insertMany
        arguments:
          documents: &insertedDocs
            - _id: 1
            - _id: 2
            - _id: 3
            - _id: 4
          session: session0
        result:
          insertedIds: {0: 1, 1: 2, 2: 3, 3: 4}
      - name: count
        collectionOptions:
          readPreference:
            mode: Secondary
        arguments:
          filter:
            _id: 1
          session: session0
        result: 1
      - name: find
        collectionOptions:
          readPreference:
            mode: Secondary
        arguments:
          batchSize: 3
          session: session0
        result: *insertedDocs
      - name: aggregate
        collectionOptions:
          readPreference:
            mode: Secondary
        arguments:
          pipeline:
            - $project:
                _id: 1
          batchSize: 3
          session: session0
        result: *insertedDocs
      - name: commitTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data: *insertedDocs

  - description: secondary readPreference

    operations:
      - name: startTransaction
        arguments:
          session: session0
          options:
            readPreference:
              mode: Secondary
      - name: insertMany
        arguments:
          documents: &insertedDocs
            - _id: 1
            - _id: 2
            - _id: 3
            - _id: 4
          session: session0
        result:
          insertedIds: {0: 1, 1: 2, 2: 3, 3: 4}
      - name: count
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          filter:
            _id: 1
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: find
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: aggregate
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          pipeline:
            - $project:
                _id: 1
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: abortTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data: []

  - description: primaryPreferred readPreference

    operations:
      - name: startTransaction
        arguments:
          session: session0
          options:
            readPreference:
              mode: PrimaryPreferred
      - name: insertMany
        arguments:
          documents: &insertedDocs
            - _id: 1
            - _id: 2
            - _id: 3
            - _id: 4
          session: session0
        result:
          insertedIds: {0: 1, 1: 2, 2: 3, 3: 4}
      - name: count
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          filter:
            _id: 1
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: find
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: aggregate
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          pipeline:
            - $project:
                _id: 1
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: abortTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data: []

  - description: nearest readPreference

    operations:
      - name: startTransaction
        arguments:
          session: session0
          options:
            readPreference:
              mode: Nearest
      - name: insertMany
        arguments:
          documents: &insertedDocs
            - _id: 1
            - _id: 2
            - _id: 3
            - _id: 4
          session: session0
        result:
          insertedIds: {0: 1, 1: 2, 2: 3, 3: 4}
      - name: count
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          filter:
            _id: 1
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: find
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: aggregate
        collectionOptions:
          readPreference:
            mode: Primary
        arguments:
          pipeline:
            - $project:
                _id: 1
          batchSize: 3
          session: session0
        result:
          errorContains: read preference in a transaction must be primary
      - name: abortTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data: []

  - description: secondary write only

    operations:
      - name: startTransaction
        arguments:
          session: session0
          options:
            readPreference:
              mode: Secondary
      - name: insertOne
        arguments:
          document:
            _id: 1
          session: session0
        result:
          insertedId: 1
      - name: commitTransaction
        arguments:
          session: session0

    outcome:
      collection:
        data:
          - _id: 1
